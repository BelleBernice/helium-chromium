--- a/chrome/browser/ui/views/tabs/tab_strip_control_button.cc
+++ b/chrome/browser/ui/views/tabs/tab_strip_control_button.cc
@@ -235,12 +235,18 @@ void TabStripControlButton::UpdateBackgr
 }
 
 int TabStripControlButton::GetCornerRadius() const {
+  if ((true))
+    return 8;
+
   return features::IsTabSearchMoving() && !features::HasTabSearchToolbarButton()
              ? kTabstripComboButtonCornerRadius
              : TabStripControlButton::kButtonSize.width() / 2;
 }
 
 int TabStripControlButton::GetFlatCornerRadius() const {
+  if ((true))
+    return 0;
+
   return features::IsTabSearchMoving() && !features::HasTabSearchToolbarButton()
              ? kTabstripComboButtonFlatCornerRadius
              : 0;
--- a/chrome/browser/ui/views/tabs/tab_search_button.cc
+++ b/chrome/browser/ui/views/tabs/tab_search_button.cc
@@ -23,7 +23,7 @@
 #include "ui/views/view_class_properties.h"
 
 namespace {
-constexpr int kCRTabSearchCornerRadius = 10;
+constexpr int kCRTabSearchCornerRadius = 8;
 constexpr int kCRTabSearchFlatCornerRadius = 4;
 constexpr int kComboButtonFlatCornerRadius = 0;
 }  // namespace
@@ -45,8 +45,7 @@ TabSearchButton::TabSearchButton(
   GetViewAccessibility().SetName(
       l10n_util::GetStringUTF16(IDS_ACCNAME_TAB_SEARCH));
 
-  if (!features::IsTabSearchMoving() ||
-      features::HasTabstripComboButtonWithBackground()) {
+  if ((false)) {
     SetForegroundFrameActiveColorId(kColorNewTabButtonForegroundFrameActive);
     SetForegroundFrameInactiveColorId(
         kColorNewTabButtonForegroundFrameInactive);
