--- a/chrome/browser/ui/views/toolbar/pinned_action_toolbar_button.cc
+++ b/chrome/browser/ui/views/toolbar/pinned_action_toolbar_button.cc
@@ -63,7 +63,7 @@ PinnedActionToolbarButton::PinnedActionT
   SetHorizontalAlignment(gfx::ALIGN_CENTER);
   SetProperty(
       views::kMarginsKey,
-      gfx::Insets::VH(0, GetLayoutConstant(TOOLBAR_ICON_DEFAULT_MARGIN)));
+      gfx::Insets::VH(0, 2));
   set_drag_controller(container);
   GetViewAccessibility().SetDescription(
       std::u16string(), ax::mojom::DescriptionFrom::kAttributeExplicitlyEmpty);
--- a/chrome/browser/ui/views/toolbar/toolbar_button.cc
+++ b/chrome/browser/ui/views/toolbar/toolbar_button.cc
@@ -157,7 +157,7 @@ void ToolbarButton::ClearHighlight() {
 
 int ToolbarButton::GetRoundedCornerRadius() const {
   return ChromeLayoutProvider::Get()->GetCornerRadiusMetric(
-      views::Emphasis::kMaximum, GetTargetSize());
+      views::Emphasis::kHigh, GetTargetSize());
 }
 
 float ToolbarButton::GetCornerRadiusFor(ToolbarButton::Edge edge) const {
--- a/chrome/browser/ui/views/toolbar/toolbar_icon_container_view.cc
+++ b/chrome/browser/ui/views/toolbar/toolbar_icon_container_view.cc
@@ -46,7 +46,7 @@ void ToolbarIconContainerView::RoundRect
   gfx::Canvas* canvas = paint_recorder.canvas();
 
   const int radius = ChromeLayoutProvider::Get()->GetCornerRadiusMetric(
-      views::Emphasis::kMaximum, layer_.size());
+      views::Emphasis::kHigh, layer_.size());
   cc::PaintFlags flags;
   flags.setAntiAlias(true);
   flags.setStyle(cc::PaintFlags::kStroke_Style);
--- a/chrome/browser/ui/views/toolbar/toolbar_ink_drop_util.cc
+++ b/chrome/browser/ui/views/toolbar/toolbar_ink_drop_util.cc
@@ -40,7 +40,7 @@ class ToolbarButtonHighlightPathGenerato
     rect.Inset(GetToolbarInkDropInsets(view));
 
     const int radii = ChromeLayoutProvider::Get()->GetCornerRadiusMetric(
-        views::Emphasis::kMaximum, rect.size());
+        views::Emphasis::kHigh, rect.size());
 
     SkPath path;
     path.addRoundRect(gfx::RectToSkRect(rect), radii, radii);
