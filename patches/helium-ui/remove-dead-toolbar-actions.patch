--- a/chrome/browser/ui/browser_actions.cc
+++ b/chrome/browser/ui/browser_actions.cc
@@ -36,8 +36,6 @@
 #include "chrome/browser/ui/passwords/passwords_model_delegate.h"
 #include "chrome/browser/ui/performance_controls/memory_saver_bubble_controller.h"
 #include "chrome/browser/ui/qrcode_generator/qrcode_generator_bubble_controller.h"
-#include "chrome/browser/ui/send_tab_to_self/send_tab_to_self_bubble.h"
-#include "chrome/browser/ui/send_tab_to_self/send_tab_to_self_toolbar_icon_controller.h"
 #include "chrome/browser/ui/tabs/public/tab_features.h"
 #include "chrome/browser/ui/tabs/saved_tab_groups/saved_tab_group_utils.h"
 #include "chrome/browser/ui/toolbar/cast/cast_toolbar_button_util.h"
@@ -48,7 +46,6 @@
 #include "chrome/browser/ui/views/frame/toolbar_button_provider.h"
 #include "chrome/browser/ui/views/media_router/cast_browser_controller.h"
 #include "chrome/browser/ui/views/page_info/page_info_view_factory.h"
-#include "chrome/browser/ui/views/send_tab_to_self/send_tab_to_self_toolbar_bubble_controller.h"
 #include "chrome/browser/ui/views/side_panel/history/history_side_panel_coordinator.h"
 #include "chrome/browser/ui/views/side_panel/history_clusters/history_clusters_side_panel_utils.h"
 #include "chrome/browser/ui/views/side_panel/side_panel_action_callback.h"
@@ -187,10 +184,6 @@ void BrowserActions::InitializeBrowserAc
                   SidePanelEntryId::kBookmarks, IDS_BOOKMARK_MANAGER_TITLE,
                   IDS_BOOKMARK_MANAGER_TITLE, kBookmarksSidePanelRefreshIcon,
                   kActionSidePanelShowBookmarks, browser, true),
-              SidePanelAction(SidePanelEntryId::kReadingList,
-                              IDS_READ_LATER_TITLE, IDS_READ_LATER_TITLE,
-                              kReadingListIcon, kActionSidePanelShowReadingList,
-                              browser, true),
               SidePanelAction(SidePanelEntryId::kAboutThisSite,
                               IDS_PAGE_INFO_ABOUT_THIS_PAGE_TITLE,
                               IDS_PAGE_INFO_ABOUT_THIS_PAGE_TITLE,
@@ -202,25 +195,11 @@ void BrowserActions::InitializeBrowserAc
                               IDS_SIDE_PANEL_CUSTOMIZE_CHROME_TITLE,
                               vector_icons::kEditChromeRefreshIcon,
                               kActionSidePanelShowCustomizeChrome, browser,
-                              false),
-              SidePanelAction(SidePanelEntryId::kShoppingInsights,
-                              IDS_SHOPPING_INSIGHTS_SIDE_PANEL_TITLE,
-                              IDS_SHOPPING_INSIGHTS_SIDE_PANEL_TITLE,
-                              vector_icons::kShoppingBagIcon,
-                              kActionSidePanelShowShoppingInsights, browser,
-                              false),
-              SidePanelAction(SidePanelEntryId::kMerchantTrust,
-                              IDS_MERCHANT_TRUST_SIDE_PANEL_TITLE,
-                              IDS_MERCHANT_TRUST_SIDE_PANEL_TITLE,
-                              vector_icons::kStorefrontIcon,
-                              kActionSidePanelShowMerchantTrust, browser,
                               false))
 
           .Build());
 
-  if (side_panel::history_clusters::
-          IsHistoryClustersSidePanelSupportedForProfile(profile) &&
-      !HistorySidePanelCoordinator::IsSupported()) {
+  if ((true)) {
     root_action_item_->AddChild(
         SidePanelAction(SidePanelEntryId::kHistoryClusters, IDS_HISTORY_TITLE,
                         IDS_HISTORY_CLUSTERS_SHOW_SIDE_PANEL,
@@ -238,13 +217,7 @@ void BrowserActions::InitializeBrowserAc
             .Build());
   }
 
-  root_action_item_->AddChild(
-      SidePanelAction(SidePanelEntryId::kReadAnything, IDS_READING_MODE_TITLE,
-                      IDS_READING_MODE_TITLE, kMenuBookChromeRefreshIcon,
-                      kActionSidePanelShowReadAnything, browser, true)
-          .Build());
-
-  if (lens::features::IsLensOverlayEnabled()) {
+  if ((false)) {
     actions::ActionItem::InvokeActionCallback callback = base::BindRepeating(
         [](base::WeakPtr<Browser> browser, actions::ActionItem* item,
            actions::ActionInvocationContext context) {
@@ -428,43 +401,6 @@ void BrowserActions::InitializeBrowserAc
                        kDeveloperToolsIcon)
           .Build());
 
-  if (send_tab_to_self::SendTabToSelfToolbarIconController::CanShowOnBrowser(
-          browser)) {
-    root_action_item_->AddChild(
-        ChromeMenuAction(
-            base::BindRepeating(
-                [](Browser* browser, actions::ActionItem* item,
-                   actions::ActionInvocationContext context) {
-                  auto* bubble_controller =
-                      browser->browser_window_features()
-                          ->send_tab_to_self_toolbar_bubble_controller();
-                  if (bubble_controller->IsBubbleShowing()) {
-                    bubble_controller->HideBubble();
-                  } else {
-                    send_tab_to_self::ShowBubble(
-                        browser->tab_strip_model()->GetActiveWebContents());
-                  }
-                },
-                base::Unretained(browser)),
-            kActionSendTabToSelf, IDS_SEND_TAB_TO_SELF, IDS_SEND_TAB_TO_SELF,
-            kDevicesChromeRefreshIcon)
-            .SetEnabled(chrome::CanSendTabToSelf(browser))
-            .SetVisible(
-                !sharing_hub::SharingIsDisabledByPolicy(browser->profile()))
-            .Build());
-  }
-
-  root_action_item_->AddChild(
-      ChromeMenuAction(base::BindRepeating(
-                           [](Browser* browser, actions::ActionItem* item,
-                              actions::ActionInvocationContext context) {
-                             chrome::ShowTranslateBubble(browser);
-                           },
-                           base::Unretained(browser)),
-                       kActionShowTranslate, IDS_SHOW_TRANSLATE,
-                       IDS_TOOLTIP_TRANSLATE, kTranslateIcon)
-          .Build());
-
   root_action_item_->AddChild(
       ChromeMenuAction(base::BindRepeating(
                            [](Browser* browser, actions::ActionItem* item,
@@ -479,55 +415,6 @@ void BrowserActions::InitializeBrowserAc
               !sharing_hub::SharingIsDisabledByPolicy(browser->profile()))
           .Build());
 
-  root_action_item_->AddChild(
-      ChromeMenuAction(
-          base::BindRepeating(
-              [](Browser* browser, actions::ActionItem* item,
-                 actions::ActionInvocationContext context) {
-                auto* controller = autofill::AddressBubblesIconController::Get(
-                    browser->tab_strip_model()->GetActiveWebContents());
-                if (controller && controller->GetBubbleView()) {
-                  controller->GetBubbleView()->Hide();
-                } else {
-                  chrome::ShowAddresses(browser);
-                }
-              },
-              base::Unretained(browser)),
-          kActionShowAddressesBubbleOrPage,
-          IDS_ADDRESSES_AND_MORE_SUBMENU_OPTION,
-          IDS_ADDRESSES_AND_MORE_SUBMENU_OPTION,
-          vector_icons::kLocationOnChromeRefreshIcon)
-          .SetEnabled(!is_guest_session)
-          .Build());
-
-  root_action_item_->AddChild(
-      ChromeMenuAction(
-          base::BindRepeating(
-              [](Browser* browser, actions::ActionItem* item,
-                 actions::ActionInvocationContext context) {
-                auto hide_bubble = [&browser](int command_id) -> bool {
-                  auto* controller = autofill::SavePaymentIconController::Get(
-                      browser->tab_strip_model()->GetActiveWebContents(),
-                      command_id);
-                  if (controller && controller->GetPaymentBubbleView()) {
-                    controller->GetPaymentBubbleView()->Hide();
-                    return true;
-                  }
-                  return false;
-                };
-                const bool bubble_hidden =
-                    hide_bubble(IDC_SAVE_CREDIT_CARD_FOR_PAGE) ||
-                    hide_bubble(IDC_SAVE_IBAN_FOR_PAGE);
-                if (!bubble_hidden) {
-                  chrome::ShowPaymentMethods(browser);
-                }
-              },
-              base::Unretained(browser)),
-          kActionShowPaymentsBubbleOrPage, IDS_PAYMENT_METHOD_SUBMENU_OPTION,
-          IDS_PAYMENT_METHOD_SUBMENU_OPTION, kCreditCardChromeRefreshIcon)
-          .SetEnabled(!is_guest_session)
-          .Build());
-
   if (IsChromeLabsEnabled() &&
       !web_app::AppBrowserController::IsWebApp(browser)) {
     // TODO(354758327): Update `ShouldShowChromeLabsUI()` to not require
@@ -570,7 +457,8 @@ void BrowserActions::InitializeBrowserAc
               base::Unretained(browser)),
           kActionShowPasswordsBubbleOrPage, IDS_VIEW_PASSWORDS,
           IDS_VIEW_PASSWORDS, vector_icons::kPasswordManagerIcon)
-          .SetEnabled(!is_guest_session)
+          .SetEnabled(false)
+          .SetVisible(false)
           .Build());
 
   root_action_item_->AddChild(
