--- a/chrome/app/settings_strings.grdp
+++ b/chrome/app/settings_strings.grdp
@@ -2070,6 +2070,28 @@
   <message name="IDS_SETTINGS_SECURITY_DESCRIPTION" desc="Description of the controls available on the security settings page">
     Safe Browsing (protection from dangerous sites) and other security settings
   </message>
+  <message name="IDS_SETTINGS_HELIUM_SERVICES" desc="Name of the page which controls connectivity to Helium services">
+    Helium services
+  </message>
+  <message name="IDS_SETTINGS_HELIUM_SERVICES_DESCRIPTION" desc="Description of the controls available on the Helium services settings page">
+    Controls whether your browser can make requests towards Helium services
+  </message>
+  <message name="IDS_SETTINGS_HELIUM_SERVICES_TOGGLE" desc="Global toggle for enabling/disabling of all Helium services">
+    Allow connecting to Helium services
+  </message>
+  <message name="IDS_SETTINGS_HELIUM_SERVICES_TOGGLE_DESCRIPTION" desc="Description of the toggle for enabling/disabling of all Helium services">
+    When enabled, Helium can connect to services for providing additional functionality, such as native bangs or extension downloads.
+  </message>
+  <message name="IDS_SETTINGS_HELIUM_SERVICES_OVERRIDE" desc="Text input for overriding the Helium services server">
+    Use your own helium-services instance
+  </message>
+  <message name="IDS_SETTINGS_HELIUM_SERVICES_OVERRIDE_DESCRIPTION" desc="Description of the text input for overriding the Helium services server">
+    You can host your own instance of helium-services and specify it here to use it in place of the default services. HTTPS only.
+  </message>
+  <message name="IDS_SETTINGS_HELIUM_SERVICES_OVERRIDE_ARIA_LABEL" desc="ARIA label of the text input for overriding the Helium services server">
+    Custom helium-services origin URL
+  </message>
+
   <message name="IDS_SETTINGS_ADVANCED_PROTECTION_PROGRAM" desc="Name of the link which takes users
     to the Google Advanced Protection Program external webpage">
     Google Advanced Protection Program
--- a/chrome/browser/ui/webui/settings/settings_localized_strings_provider.cc
+++ b/chrome/browser/ui/webui/settings/settings_localized_strings_provider.cc
@@ -1837,6 +1837,16 @@ void AddPrivacyStrings(content::WebUIDat
       {"permissionsPageDescription", IDS_SETTINGS_PERMISSIONS_DESCRIPTION},
       {"securityPageTitle", IDS_SETTINGS_SECURITY},
       {"securityPageDescription", IDS_SETTINGS_SECURITY_DESCRIPTION},
+      {"heliumServicesTitle", IDS_SETTINGS_HELIUM_SERVICES},
+      {"heliumServicesDescription", IDS_SETTINGS_HELIUM_SERVICES_DESCRIPTION},
+      {"heliumServicesToggle", IDS_SETTINGS_HELIUM_SERVICES_TOGGLE},
+      {"heliumServicesToggleDescription",
+        IDS_SETTINGS_HELIUM_SERVICES_TOGGLE_DESCRIPTION},
+      {"heliumOriginOverride", IDS_SETTINGS_HELIUM_SERVICES_OVERRIDE},
+      {"heliumOriginOverrideDescription",
+        IDS_SETTINGS_HELIUM_SERVICES_OVERRIDE_DESCRIPTION},
+      {"heliumOriginOverrideLabel",
+        IDS_SETTINGS_HELIUM_SERVICES_OVERRIDE_ARIA_LABEL},
       {"advancedProtectionProgramTitle",
        IDS_SETTINGS_ADVANCED_PROTECTION_PROGRAM},
       {"advancedProtectionProgramDesc",
--- a/chrome/browser/resources/settings/privacy_icons.html
+++ b/chrome/browser/resources/settings/privacy_icons.html
@@ -29,6 +29,33 @@
       <g id="account-circle-off" viewBox="0 -960 960 960">
         <path d="M527-535ZM420-420Zm59.96 252Q532-168 580-184.5q48-16.5 90-48.5-43-27-91-41t-99-14q-51 0-99.5 13.5T290-233q42 32 89.96 48.5 47.96 16.5 100 16.5ZM595-466l-52-52q5-8 7-16.67 2-8.66 2-17.33 0-30-21-51t-51-21q-8.67 0-17.33 2-8.67 2-16.67 7l-52-52q19-14 41-21.5t45-7.5q59.66 0 101.83 42.17T624-552q0 23-7.5 45T595-466Zm202 202-52-52q23-37 35-78.66 12-41.65 12-85.34 0-130-91-221t-221-91q-43.69 0-85.34 12Q353-768 316-745l-52-52q48-33 103.02-50 55.02-17 112.98-17 80 0 149.5 30t122 82.5Q804-699 834-629.5T864-480q0 57.96-17 112.98T797-264ZM480-96q-79.38 0-149.19-30T208.5-208.5Q156-261 126-330.81T96-480q0-57.62 17-112.31Q130-647 162-695l-72-73 51-51 678 678-51 51-554-553q-23 37-34.5 78T168-480q0 54 17 104t52 91q54-38 115.41-56.5Q413.83-360 479.66-360q37.34 0 73.34 6.5t71 18.5l127 127q-54 54-124.09 83Q556.81-96 480-96Z"></path>
       </g>
+      <!-- "balloon" is from Tabler Icons
+       MIT License
+
+      Copyright (c) 2020-2024 PaweÅ‚ Kuna
+
+      Permission is hereby granted, free of charge, to any person obtaining a copy
+      of this software and associated documentation files (the "Software"), to deal
+      in the Software without restriction, including without limitation the rights
+      to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+      copies of the Software, and to permit persons to whom the Software is
+      furnished to do so, subject to the following conditions:
+
+      The above copyright notice and this permission notice shall be included in all
+      copies or substantial portions of the Software.
+
+      THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+      IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+      FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+      AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+      LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+      OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
+      SOFTWARE.
+       -->
+      <g id="balloon" viewBox="0 0 24 24">
+        <path d="M10 20a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v1a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1zm2-4c3.314 0 6-4.686 6-8A6 6 0 1 0 6 8c0 3.314 2.686 8 6 8"/>
+        <path d="M10 9a2 7 0 1 0 4 0a2 7 0 1 0-4 0"/>
+      </g>
       <g id="cardboard" viewBox="0 -960 960 960">
         <path d="M216-336h153l29.75-58.35Q411-417 432.5-430.5t47.49-13.5q25.99 0 47.5 13T561-395.08L591-336h153v-288H216v288Zm96.21-72Q342-408 363-429.21t21-51Q384-510 362.79-531t-51-21Q282-552 261-530.79t-21 51Q240-450 261.21-429t51 21ZM144-336.06v-288.22Q144-654 165.15-675T216-696h528q29.7 0 50.85 21.17Q816-653.67 816-623.94v288.22Q816-306 794.85-285T744-264H591q-20 0-37.5-10.5T527-303l-30-58q-2.57-5.08-7.29-8.04Q485-372 480-372q-5 0-10 3t-7 8l-30 58q-9 18-26.5 28.5T369-264H216q-29.7 0-50.85-21.17Q144-306.33 144-336.06ZM648.21-408Q678-408 699-429.21t21-51Q720-510 698.79-531t-51-21Q618-552 597-530.79t-21 51Q576-450 597.21-429t51 21ZM480-480Z"></path>
       </g>
--- a/chrome/browser/resources/settings/privacy_page/privacy_page.html
+++ b/chrome/browser/resources/settings/privacy_page/privacy_page.html
@@ -76,6 +76,11 @@
             sub-label="$i18n{permissionsPageDescription}"
             on-click="onPermissionsPageClick_"
             role-description="$i18n{subpageArrowRoleDescription}"></cr-link-row>
+        <cr-link-row id="heliumServicesLinkRow" start-icon="privacy:balloon"
+            class="hr" label="$i18n{heliumServicesTitle}"
+            sub-label="$i18n{heliumServicesDescription}"
+            on-click="onHeliumServicesPageClick_"
+            role-description="$i18n{subpageArrowRoleDescription}"></cr-link-row>
       </div>
 
 <if expr="use_nss_certs">
@@ -170,6 +175,13 @@
         </template>
       </template>
 
+      <template is="dom-if" route-path="/privacy/services">
+        <settings-subpage id="services" page-title="$i18n{heliumServicesTitle}"
+            associated-control="[[$$('#heliumServicesLinkRow')]]">
+          <settings-helium-services-page prefs="{{prefs}}"></settings-helium-services-page>
+        </settings-subpage>
+      </template>
+
       <template is="dom-if" route-path="/security">
         <settings-subpage id="security" page-title="$i18n{securityPageTitle}"
             associated-control="[[$$('#securityLinkRow')]]"
--- a/chrome/browser/resources/settings/privacy_page/privacy_page.ts
+++ b/chrome/browser/resources/settings/privacy_page/privacy_page.ts
@@ -502,6 +502,12 @@ export class SettingsPrivacyPageElement
     Router.getInstance().navigateTo(routes.SITE_SETTINGS);
   }
 
+  private onHeliumServicesPageClick_() {
+    this.interactedWithPage_();
+
+    Router.getInstance().navigateTo(routes.HELIUM_SERVICES);
+  }
+
   private onSecurityPageClick_() {
     this.interactedWithPage_();
     this.metricsBrowserProxy_.recordAction(
--- a/chrome/browser/resources/settings/router.ts
+++ b/chrome/browser/resources/settings/router.ts
@@ -33,6 +33,7 @@ export interface SettingsRoutes {
   EDIT_DICTIONARY: Route;
   FONTS: Route;
   GLIC: Route;
+  HELIUM_SERVICES: Route;
   HISTORY_SEARCH: Route;
   INCOMPATIBLE_APPLICATIONS: Route;
   LANGUAGES: Route;
--- a/chrome/browser/resources/settings/route.ts
+++ b/chrome/browser/resources/settings/route.ts
@@ -18,6 +18,8 @@ function addPrivacyChildRoutes(r: Partia
   r.CLEAR_BROWSER_DATA = r.PRIVACY.createChild('/clearBrowserData');
   r.CLEAR_BROWSER_DATA.isNavigableDialog = true;
 
+  r.HELIUM_SERVICES = r.PRIVACY.createChild('services');
+
   const visibility = pageVisibility || {};
 
   if (visibility.safetyHub !== false) {
--- a/chrome/browser/resources/settings/BUILD.gn
+++ b/chrome/browser/resources/settings/BUILD.gn
@@ -141,6 +141,7 @@ build_webui("build") {
     "privacy_page/security_keys_set_pin_dialog.ts",
     "privacy_page/security_keys_subpage.ts",
     "privacy_page/security_page.ts",
+    "privacy_page/services_page.ts",
     "privacy_sandbox/privacy_sandbox_ad_measurement_subpage.ts",
     "privacy_sandbox/privacy_sandbox_fledge_subpage.ts",
     "privacy_sandbox/privacy_sandbox_interest_item.ts",
--- /dev/null
+++ b/chrome/browser/resources/settings/privacy_page/services_page.html
@@ -0,0 +1,41 @@
+<style include="cr-shared-style settings-shared">
+    .label-wrapper {
+        padding: var(--cr-section-vertical-padding) 0;
+    }
+</style>
+
+<div class="cr-col first">
+    <settings-toggle-button id="servicesToggleButton"
+        pref="{{prefs.helium.services.enabled}}"
+        label="$i18n{heliumServicesToggle}"
+        sub-label="$i18n{heliumServicesToggleDescription}">
+    </settings-toggle-button>
+    <div class="cr-col">
+        <cr-collapse id="servicesCollapse" opened="[[prefs.helium.services.enabled.value]]">
+        </cr-collapse>
+    </div>
+</div>
+
+
+<div class="cr-row">
+  <div class="flex">
+    <div class="flex label-wrapper">
+        <div class="label">$i18n{heliumOriginOverride}</div>
+        <div class="cr-secondary-text label">$i18n{heliumOriginOverrideDescription}</div>
+    </div>
+    <cr-input
+        id="heliumOriginOverride"
+        placeholder="https://services.helium.computer"
+        value="[[prefs.helium.services.origin_override.value]]"
+        pattern="https://.*"
+        on-keydown="onOriginOverrideKeydown_"
+        on-change="onOriginOverrideChange_"
+        type="url"
+        maxlength="128"
+        aria-label="$i18n{heliumOriginOverrideLabel}"
+        auto-validate
+        error-message="Invalid origin"
+        spellcheck="false"
+    />
+  </div>
+</div>
--- /dev/null
+++ b/chrome/browser/resources/settings/privacy_page/services_page.ts
@@ -0,0 +1,68 @@
+import {HelpBubbleMixin} from 'chrome://resources/cr_components/help_bubble/help_bubble_mixin.js';
+import {I18nMixin} from 'chrome://resources/cr_elements/i18n_mixin.js';
+import {PrefsMixin} from '/shared/settings/prefs/prefs_mixin.js';
+import {PolymerElement} from 'chrome://resources/polymer/v3_0/polymer/polymer_bundled.min.js';
+import {getTemplate} from './services_page.html.js';
+import type {CrInputElement} from 'chrome://resources/cr_elements/cr_input/cr_input.js';
+
+const SettingsHeliumServicesPageElementBase =
+    HelpBubbleMixin(I18nMixin(PrefsMixin(PolymerElement)));
+
+export class SettingsHeliumServicesPageElement
+    extends SettingsHeliumServicesPageElementBase
+{
+  static get is() {
+    return 'settings-helium-services-page';
+  }
+
+  static get template() {
+    return getTemplate();
+  }
+
+  static get properties() {
+    return {
+      prefs: {
+        type: Object,
+        notify: true,
+      },
+    };
+  }
+
+  private toOrigin(thing: string) {
+    try {
+      return new URL(thing).origin;
+    } catch {
+      return null;
+    }
+  }
+
+  protected onOriginOverrideKeydown_(event: KeyboardEvent) {
+    const target = event.target as CrInputElement;
+
+    if (event.key === 'Escape' || event.key === 'Enter') {
+      target.blur();
+    }
+  }
+
+  private onOriginOverrideChange_(event: Event) {
+    const target = event.target as CrInputElement;
+    if (target.invalid) {
+      return;
+    }
+
+    const origin = this.toOrigin(target.value);
+    if (origin) {
+      target.value = origin;
+    }
+
+    this.setPrefValue('helium.services.origin_override', target.value);
+  }
+}
+
+declare global {
+    interface HTMLElementTagNameMap {
+      'settings-helium-services-page': SettingsHeliumServicesPageElement;
+    }
+}
+
+customElements.define(SettingsHeliumServicesPageElement.is, SettingsHeliumServicesPageElement);
--- a/chrome/browser/resources/settings/lazy_load.ts
+++ b/chrome/browser/resources/settings/lazy_load.ts
@@ -30,6 +30,7 @@ import './privacy_page/security_keys_pho
 import './privacy_page/security_keys_phones_list.js';
 import './privacy_page/security_keys_phones_dialog.js';
 import './privacy_page/security_page.js';
+import './privacy_page/services_page.js';
 import './safety_hub/safety_hub_page.js';
 import './safety_hub/safety_hub_entry_point.js';
 import './site_settings/all_sites.js';
@@ -202,6 +203,7 @@ export {ResetDialogPage, SettingsSecurit
 export {SetPinDialogPage, SettingsSecurityKeysSetPinDialogElement} from './privacy_page/security_keys_set_pin_dialog.js';
 export {SecurityKeysSubpageElement} from './privacy_page/security_keys_subpage.js';
 export {HttpsFirstModeSetting, SafeBrowsingSetting, SettingsSecurityPageElement} from './privacy_page/security_page.js';
+export {SettingsHeliumServicesPageElement} from './privacy_page/services_page.js';
 export {SettingsPrivacySandboxAdMeasurementSubpageElement} from './privacy_sandbox/privacy_sandbox_ad_measurement_subpage.js';
 export {SettingsPrivacySandboxFledgeSubpageElement} from './privacy_sandbox/privacy_sandbox_fledge_subpage.js';
 export {PrivacySandboxInterestItemElement} from './privacy_sandbox/privacy_sandbox_interest_item.js';
--- a/chrome/browser/ui/browser_ui_prefs.cc
+++ b/chrome/browser/ui/browser_ui_prefs.cc
@@ -13,6 +13,7 @@
 #include "chrome/browser/upgrade_detector/upgrade_detector.h"
 #include "chrome/common/buildflags.h"
 #include "chrome/common/pref_names.h"
+#include "components/helium_services/pref_names.h"
 #include "components/policy/core/common/policy_pref_names.h"
 #include "components/pref_registry/pref_registry_syncable.h"
 #include "components/prefs/pref_registry_simple.h"
@@ -169,6 +170,11 @@ void RegisterBrowserUserPrefs(user_prefs
                                 false);
 #endif
 
+  {
+    registry->RegisterBooleanPref(prefs::kHeliumServicesEnabled, false);
+    registry->RegisterStringPref(prefs::kHeliumServicesOrigin, "");
+  }
+
   registry->RegisterBooleanPref(
       prefs::kHttpsOnlyModeEnabled, false,
       user_prefs::PrefRegistrySyncable::SYNCABLE_PREF);
--- a/chrome/browser/extensions/api/settings_private/prefs_util.cc
+++ b/chrome/browser/extensions/api/settings_private/prefs_util.cc
@@ -42,6 +42,7 @@
 #include "components/dom_distiller/core/pref_names.h"
 #include "components/drive/drive_pref_names.h"
 #include "components/embedder_support/pref_names.h"
+#include "components/helium_services/pref_names.h"
 #include "components/language/core/browser/pref_names.h"
 #include "components/live_caption/pref_names.h"
 #include "components/media_router/common/pref_names.h"
@@ -335,6 +336,12 @@ const PrefsUtil::TypedPrefMap& PrefsUtil
       settings_api::PrefType::kString;
 #endif
 
+  // Helium services page
+  (*s_allowlist)[::prefs::kHeliumServicesEnabled] =
+      settings_api::PrefType::kBoolean;
+  (*s_allowlist)[::prefs::kHeliumServicesOrigin] =
+      settings_api::PrefType::kString;
+
   // Privacy Guide
   (*s_allowlist)[::prefs::kPrivacyGuideViewed] =
       settings_api::PrefType::kBoolean;
--- /dev/null
+++ b/components/helium_services/BUILD.gn
@@ -0,0 +1,20 @@
+# Copyright 2025 The Helium Authors
+# Use of this source code is governed by a BSD-style license that can be
+# found in the LICENSE file.
+
+component("helium_services") {
+  sources = [
+    "helium_services_helpers.cc",
+    "helium_services_helpers.h",
+    "pref_names.h",
+  ]
+
+  public_deps = [
+    "//base",
+    "//components/prefs",
+    "//url",
+    "//net",
+  ]
+
+  defines = [ "IS_HELIUM_IMPL" ]
+}
--- /dev/null
+++ b/components/helium_services/helium_services_helpers.cc
@@ -0,0 +1,83 @@
+// Copyright 2025 The Helium Authors
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+#include "components/helium_services/helium_services_helpers.h"
+
+#include <optional>
+
+#include "base/functional/bind.h"
+#include "components/helium_services/pref_names.h"
+#include "components/prefs/pref_service.h"
+#include "net/base/url_util.h"
+#include "url/gurl.h"
+#include "url/url_constants.h"
+
+namespace helium {
+
+std::optional<GURL> GetValidUserOverridenURL(std::string_view user_url_) {
+    if (user_url_.empty()) {
+        return std::nullopt;
+    }
+
+    GURL user_url = GURL(user_url_);
+    if (!user_url.is_valid()) {
+        return std::nullopt;
+    }
+
+    bool isSecure = user_url.SchemeIs(url::kHttpsScheme) || net::IsLocalhost(user_url);
+    if (!isSecure) {
+        return std::nullopt;
+    }
+
+    return user_url;
+}
+
+std::optional<GURL> GetValidUserOverridenURL(const PrefService& prefs) {
+    return GetValidUserOverridenURL(
+        prefs.GetString(prefs::kHeliumServicesOrigin)
+    );
+}
+
+GURL GetServicesBaseURL(const PrefService& prefs) {
+    std::optional<GURL> user_url = GetValidUserOverridenURL(prefs);
+    if (user_url) {
+        return *user_url;
+    }
+
+    return GURL(kHeliumDefaultOrigin);
+}
+
+GURL GetDummyURL() {
+    return GURL(kHeliumDummyOrigin);
+}
+
+bool ShouldAccessServices(const PrefService& prefs) {
+    return prefs.GetBoolean(prefs::kHeliumServicesEnabled);
+}
+
+bool ShouldAccessExtensionService(const PrefService& prefs) {
+    return ShouldAccessServices(prefs) &&
+            prefs.GetBoolean(prefs::kHeliumExtProxyEnabled);
+}
+
+bool ShouldFetchBangs(const PrefService& prefs) {
+    return ShouldAccessServices(prefs) &&
+            prefs.GetBoolean(prefs::kHeliumBangsEnabled);
+}
+
+GURL GetExtensionUpdateURL(const PrefService& prefs) {
+    if (!ShouldAccessExtensionService(prefs)) {
+        return GetDummyURL();
+    }
+
+    return GetServicesBaseURL(prefs).Resolve("/ext");
+}
+
+void ConfigurePrefChangeRegistrarFor(std::string_view pref_name,
+    PrefChangeRegistrar& registrar, const base::RepeatingClosure& observer) {
+  registrar.Add(prefs::kHeliumServicesEnabled, observer);
+  registrar.Add(prefs::kHeliumServicesOrigin, observer);
+  registrar.Add(pref_name, observer);
+}
+
+}  // namespace helium
--- /dev/null
+++ b/components/helium_services/helium_services_helpers.h
@@ -0,0 +1,28 @@
+// Copyright 2025 The Helium Authors
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#ifndef COMPONENTS_HELIUM_SEREVICES_HELIUM_SERVICES_HELPERS_H_
+#define COMPONENTS_HELIUM_SEREVICES_HELIUM_SERVICES_HELPERS_H_
+
+#include "components/prefs/pref_service.h"
+#include "url/gurl.h"
+
+namespace helium {
+
+const char kHeliumDefaultOrigin[] =
+    "https://services.helium.computer";
+
+const char kHeliumDummyOrigin[] =
+    "https://helium-services-are-disabled.qjz9zk";
+
+COMPONENT_EXPORT(HELIUM) bool ShouldFetchBangs(const PrefService& prefs);
+COMPONENT_EXPORT(HELIUM) GURL GetServicesBaseURL(const PrefService& prefs);
+COMPONENT_EXPORT(HELIUM) GURL GetDummyURL();
+COMPONENT_EXPORT(HELIUM) GURL GetExtensionUpdateURL(const PrefService& prefs);
+COMPONENT_EXPORT(HELIUM) std::optional<GURL> GetValidUserOverridenURL(std::string_view user_url_);
+COMPONENT_EXPORT(HELIUM) void ConfigurePrefChangeRegistrarFor(std::string_view pref_name,
+                            PrefChangeRegistrar& registrar, const base::RepeatingClosure& observer);
+}  // namespace helium
+
+#endif  // COMPONENTS_HELIUM_SEREVICES_HELIUM_SERVICES_HELPERS_H_
--- /dev/null
+++ b/components/helium_services/pref_names.h
@@ -0,0 +1,18 @@
+// Copyright 2025 The Helium Authors
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#ifndef COMPONENTS_HELIUM_SERVICES_PREF_NAMES_H_
+#define COMPONENTS_HELIUM_SERVICES_PREF_NAMES_H_
+
+namespace prefs {
+
+inline constexpr char kHeliumServicesEnabled[] =
+    "helium.services.enabled";
+
+inline constexpr char kHeliumServicesOrigin[] =
+    "helium.services.origin_override";
+
+}  // namespace prefs
+
+#endif  // COMPONENTS_HELIUM_SERVICES_PREF_NAMES_H_
