--- a/chrome/browser/ui/views/profiles/avatar_toolbar_button_delegate.cc
+++ b/chrome/browser/ui/views/profiles/avatar_toolbar_button_delegate.cc
@@ -1753,7 +1753,7 @@ AvatarToolbarButtonDelegate::GetTextAndC
       break;
     }
     case ButtonState::kNormal:
-      color = color_provider->GetColor(kColorAvatarButtonHighlightNormal);
+      color = std::nullopt;
       break;
 #if BUILDFLAG(ENABLE_DICE_SUPPORT)
     case ButtonState::kHistorySyncOptin: {
@@ -1989,7 +1989,6 @@ ui::ImageModel AvatarToolbarButtonDelega
 bool AvatarToolbarButtonDelegate::ShouldPaintBorder() const {
   switch (state_manager_->GetButtonActiveState()) {
     case ButtonState::kGuestSession:
-      return true;
     case ButtonState::kShowIdentityName:
     case ButtonState::kNormal:
 #if BUILDFLAG(ENABLE_DICE_SUPPORT)
--- a/chrome/browser/profiles/profile_avatar_icon_util.cc
+++ b/chrome/browser/profiles/profile_avatar_icon_util.cc
@@ -436,7 +436,7 @@ ui::ImageModel GetGuestAvatar(int size)
   if (base::FeatureList::IsEnabled(switches::kEnableImprovedGuestProfileMenu)) {
     // Guest profiles generally use the default theme, no need to go through the
     // `ThemeService`.
-    color_id = ui::kColorSysPrimary;
+    color_id = ui::kColorMenuIcon;
     vector_icon = &kAccountBoxIcon;
   }
   return ui::ImageModel::FromVectorIcon(*vector_icon, color_id, size);
